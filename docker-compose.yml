# version: "3.7"

# services:
#   gateway:
#     image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-gateway
#     restart: "unless-stopped"
#     platform: "linux/amd64"

#     depends_on:
#       frontend:
#         condition: service_healthy
#       backend:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD", "nginx", "-t"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#     ports:
#       - "80:80"

#   frontend:
#     image: anish443/patsummaryfront:latest
#     restart: "unless-stopped"
#     environment:
#       SPA_PATH: /openmrs/spa
#       API_URL: /openmrs
#       SPA_CONFIG_URLS: /openmrs/spa/config-core_demo.json
#       SPA_DEFAULT_LOCALE:
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost/"]
#       timeout: 5s
#     depends_on:
#       - backend

#   backend:
#     # image: openmrs/openmrs-reference-application-3-backend:${TAG:-dev3}
#     image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-backend
#     platform: "linux/amd64"
#     #image: openmrs-backend
#     restart: "unless-stopped"
#     depends_on:
#       - postgres-db
#           # condition: service_healthy

#     environment:
#       # OMRS_DB: "postgresql"
#       OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
#       OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
#       OMRS_CONFIG_CREATE_TABLES: "true"
#       OMRS_CONFIG_CONNECTION_SERVER: postgres-db
#       OMRS_CONFIG_CONNECTION_DATABASE: openmrs
#       OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USER:-openmrs}
#       OMRS_CONFIG_CONNECTION_PASSWORD: ${OPENMRS_DB_PASSWORD:-openmrs}
#       OMRS_CONFIG_CONNECTION_PORT:  ${OMRS_CONFIG_CONNECTION_PORT:-5432}
#       OMRS_DB_DRIVER_CLASS: org.postgresql.Driver
#       OMRS_CONFIG_CONNECTION_URL: jdbc:postgresql://postgres-db:5432/openmrs
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
#       timeout: 5s
#     volumes:
#       - openmrs-data:/openmrs/data

#   # PostgreSQL
#   postgres-db:
#     image: postgres:15
#     restart: "unless-stopped"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${OMRS_DB_USER:-openmrs}"]
#       interval: 3s
#       timeout: 1s
#       retries: 5
#     ports:
#       - "5439:5432"

#     environment:
#       POSTGRES_DB: openmrs
#       POSTGRES_USER: ${OMRS_DB_USER:-openmrs}
#       POSTGRES_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
#     volumes:
#       - pg-db-data:/var/lib/postgresql/data

# volumes:
#   openmrs-data: ~
#   pg-db-data: ~
version: "3.7"

services:
  gateway:
    image: openmrs/openmrs-reference-application-3-gateway:${TAG:-qa}
    restart: "unless-stopped"
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"

  frontend:
    image: anish443/patsummaryf:latest
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config-core_demo.json
      SPA_DEFAULT_LOCALE:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend

  backend:
    image: openmrs/openmrs-reference-application-3-backend:${TAG:-qa}
    restart: "unless-stopped"
    depends_on:
      - db
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data

  # MariaDB
  db:
    image: mariadb:10.11.7
    restart: "unless-stopped"
    command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"
    healthcheck:
      test: "mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
    volumes:
      - db-data:/var/lib/mysql

volumes:
  openmrs-data: ~
  db-data: ~