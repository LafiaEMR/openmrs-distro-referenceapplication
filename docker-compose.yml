version: "3.7"

services:
  gateway:
    # build:
    # context: https://github.com/LafiaEMR/openmrs-distro-referenceapplication#dev2
    # dockerfile: gateway/Dockerfile
    # context: ./gateway
    # dockerfile: Dockerfile
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-gateway-prod:0.0.5
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-gateway-prod:${TAG}
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-gateway-prod:${TAG:-latest}
    image: profgreatwonder/lafiaopenmrs-core-gateway:${TAG:-latest}
    restart: "unless-stopped"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "80:80"

  frontend:
    # build:
    # context: https://github.com/LafiaEMR/openmrs-distro-referenceapplication#dev2
    # context: ./frontend/Dockerfile
    # context: ./frontend
    # dockerfile: Dockerfile
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-frontend-prod:0.0.5
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-frontend-prod:${TAG}
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-frontend-prod:${TAG:-latest}
    image: profgreatwonder/lafiahms-frontend:${TAG:-latest}
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config-core_demo.json
      SPA_DEFAULT_LOCALE:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend

  backend:
    # build:
    # context: https://github.com/LafiaEMR/openmrs-core.git#dev2
    # dockerfile: Dockerfile
    # context: https://github.com/LafiaEMR/openmrs-core/blob/dev2/Dockerfile
    # context: ../openmrs-core
    # dockerfile: Dockerfile
    # args:
    #   MVN_ARGS: "-DskipTests -U"
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-backend-prod:0.0.5
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-backend-prod:${TAG}
    # image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-backend-prod:${TAG:-latest}
    image: profgreatwonder/openmrs-core:${TAG:-latest}
    restart:
      "unless-stopped"
      # condition: service_healthy

    environment:
      OMRS_ADD_DEMO_DATA: "false"
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "false"
      OMRS_CONFIG_CREATE_TABLES: "false"
      OMRS_CONFIG_CONNECTION_SERVER: ${OPENMRS_DB_HOST:-hmsdb-dev-3.crqmcea0mlot.eu-west-2.rds.amazonaws.com}
      OMRS_CONFIG_CONNECTION_DATABASE: ${OPENMRS_DB_NAME:-lafiahmsdb}
      OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USERNAME:-hmsdbdev3}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OPENMRS_DB_PASSWORD:-fVB64mRT6CGEvFdDS2Yx}
      OMRS_CONFIG_CONNECTION_PORT: ${OMRS_CONFIG_CONNECTION_PORT:-5432}
      OMRS_DB_DRIVER_CLASS: ${OPENMRS_DB_DRIVER:-org.postgresql.Driver}
      OMRS_CONFIG_CONNECTION_URL: ${OPENMRS_DB_URL:-jdbc:postgresql://hmsdb-dev-3.crqmcea0mlot.eu-west-2.rds.amazonaws.com/lafiahmsdb}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data

# DOCKER_BUILDKIT=1 docker compose build - if you're building from github repo
# docker compose down -v --rmi all - remove container

volumes:
  openmrs-data: ~
