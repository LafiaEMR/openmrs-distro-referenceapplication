name: Production Build, Push and Deploy

on:
  push:
    branches: prod-test

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Short SHA
        run: |
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Images
        env:
          TAG: ${{ env.SHORT_SHA }}
        run: |
          docker compose build
          docker compose push

      # - name: Checkout Helm Chart Repository
      #   uses: actions/checkout@v4
      #   with:
      #     repository: git@github.com:LafiaEMR/lafia-infrastructure-k8-apps
      #     path: helm-charts
      #     ssh-key: ${{ secrets.HELM_REPO_SSH_KEY_ACCESS }}
      #     ref: main
      # - name: Setup SSH Key
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.HELM_REPO_SSH_KEY }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Checkout Helm Chart Repository
        uses: actions/checkout@v4
        with:
          repository: LafiaEMR/lafia-infrastructure-k8-apps
          path: lafia-infrastructure-k8-apps
          ssh-key: ${{ secrets.HELM_REPO_SSH_KEY_ACCESS }}
          ref: main

      # - name: Install yq
      #   run: |
      #     wget https://github.com/mikefarah/yq/releases/download/v4.33.2/yq_linux_amd64 -O /usr/bin/yq
      #     chmod +x /usr/bin/yq

      - name: Install yq
        run: |
          mkdir -p $HOME/.local/bin
          wget https://github.com/mikefarah/yq/releases/download/v4.33.2/yq_linux_amd64 -O $HOME/.local/bin/yq
          chmod +x $HOME/.local/bin/yq
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Helm Chart with New Image Tag
        run: |
          yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/helm-charts/lafiahms-gateway/values.yaml
          yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/helm-charts/lafiahms-frontend/values.yaml
          yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/helm-charts/openmrs-core/values.yaml

          # yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/env/sim/lafiahms-frontend/lafiahms-frontend.yaml
          # yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/env/sim/lafiahms-gateway/lafiahms-gateway.yaml
          # yq -i '.image.tag = "${{ env.SHORT_SHA }}"' lafia-infrastructure-k8-apps/env/sim/openmrs-core/openmrs-core.yaml

      - name: Commit and Push Helm Chart Changes
        run: |
          cd lafia-infrastructure-k8-apps
          git config user.name "profgreatwonder"
          git config user.email "muoghaluchidinma@gmail.com"
          git add helm-charts/lafiahms-gateway/values.yaml helm-charts/lafiahms-frontend/values.yaml helm-charts/openmrs-core/values.yaml
          git commit -m "Update image tag to ${{ env.SHORT_SHA }}"
          git push origin main

      # - name: Post Deployment Status to a Slack channel
      #   if: always()
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_CHANNEL: "peerless_licence"
      #     SLACK_COLOR: ${{ job.status }}
      #     SLACK_ICON: https://www.google.com/url?sa=i&url=https%3A%2F%2Fdocs.sonarqube.org%2Flatest%2F&psig=AOvVaw0w2T9P8V_lSTbrG3lXodvg&ust=1684621526266000&source=images&cd=vfe&ved=0CA4QjRxqFwoTCMjP36-2gv8CFQAAAAAdAAAAABAD
      #     SLACK_MESSAGE_ON_SUCCESS: "Distro Passed"
      #     SLACK_MESSAGE_ON_FAILURE: "Distro Failed"
      #     SLACK_MESSAGE_ON_CANCEL: "Distro Cancelled"
      #     SLACK_TITLE: Message
      #     SLACK_USERNAME: Lafialink
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_MESSAGE: ":rocket: Successfully built and pushed openmrs-distro-referenceapplication/${{ steps.tags.outputs.BRANCH_NAME }} image to ECR"
          SLACK_TITLE: "Build Success"
          SLACK_USERNAME: GitHub Actions

      - name: Notify Slack on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: danger
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_MESSAGE: ":x: Failed to build openmrs-distro-referenceapplication/${{ steps.tags.outputs.BRANCH_NAME }} image to ECR"
          SLACK_TITLE: "Build Failed"
          SLACK_USERNAME: GitHub Actions
